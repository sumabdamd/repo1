name: Check Python Score and Raise Issue
on:
  push:
    paths:
     # Trigger workflow on any change to metrics.json file
      - 'score/check/sample.json'
      - 'score/check/sample1.json'
      - 'score/check/test.json'
  pull_request:
    paths:
    # Trigger on PRs that include changes to metrics.json file
      - 'score/check/sample.json'
      - 'score/check/sample1.json'
      - 'score/check/test.json'

jobs:
  check-python-score:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Get changed file(s)
        id: get_changed_file
        run: |
          # Get the list of changed files from the push or pull request
          echo "Changed files: ${{ github.event.head_commit.modified }}"

          # Find the file(s) we need to check (assuming only one file is changed)
          file_path=$(echo "${{ github.event.head_commit.modified }}" | grep -Eo 'score/check/.+\.json' | head -n 1)
          echo "File to check: $file_path"

          # Output the file path for later use
          echo "::set-output name=file_path::$file_path"

      - name: Read and check score from JSON file
        id: check_score
        run: |
          # Get the file path passed from the previous step
          file_path="${{ steps.get_changed_file.outputs.file_path }}"
          
          if [ -z "$file_path" ]; then
            echo "No valid JSON file found. Exiting."
            exit 1
          fi
          
          echo "Reading $file_path..."
          
          # Use jq to extract the score from the selected JSON file
          score=$(jq '.python_score' "$file_path")
          
          # Print the score (for debugging)
          echo "Python score from $file_path: $score"
          
          # Check if the score is less than 98%
          if (( $(echo "$score < 98" | bc -l) )); then
            echo "::set-output name=low_score::true"
          else
            echo "::set-output name=low_score::false"
          fi

      - name: Create GitHub Issue if ROCm score is below 98%
        if: steps.check_score.outputs.low_score == 'true'
        run: |
          # Define the GitHub token for authentication
          GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}"
          
          # Create an issue using GitHub API if score is less than 98%
          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{
              "title": "PythonScore Below 98%: Action Required",
              "body": "The Python score in the recent metrics submission is below the threshold of 98%. Please investigate the issue. \n\n**Score**: '"$score"',
              "labels": ["python-score", "needs-investigation"]
            }' \
            https://api.github.com/repos/${{ github.repository }}/issues
